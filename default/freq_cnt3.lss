
freq_cnt3.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00000336  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .bss          0000000d  00800060  00800060  000003aa  2**0
                  ALLOC
  2 .stab         000006b4  00000000  00000000  000003ac  2**2
                  CONTENTS, READONLY, DEBUGGING
  3 .stabstr      0000005f  00000000  00000000  00000a60  2**0
                  CONTENTS, READONLY, DEBUGGING
  4 .debug_aranges 00000020  00000000  00000000  00000abf  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_pubnames 000000da  00000000  00000000  00000adf  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000023d  00000000  00000000  00000bb9  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000151  00000000  00000000  00000df6  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000030d  00000000  00000000  00000f47  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000090  00000000  00000000  00001254  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000104  00000000  00000000  000012e4  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001c5  00000000  00000000  000013e8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 13 01 	jmp	0x226	; 0x226 <__vector_8>
  24:	0c 94 e9 00 	jmp	0x1d2	; 0x1d2 <__vector_9>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d4 e0       	ldi	r29, 0x04	; 4
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e6 e3       	ldi	r30, 0x36	; 54
  68:	f3 e0       	ldi	r31, 0x03	; 3
  6a:	02 c0       	rjmp	.+4      	; 0x70 <.do_copy_data_start>

0000006c <.do_copy_data_loop>:
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0

00000070 <.do_copy_data_start>:
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <.do_copy_data_loop>

00000076 <__do_clear_bss>:
  76:	10 e0       	ldi	r17, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	ad 36       	cpi	r26, 0x6D	; 109
  82:	b1 07       	cpc	r27, r17
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 1f 01 	call	0x23e	; 0x23e <main>
  8a:	0c 94 99 01 	jmp	0x332	; 0x332 <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <port_init>:
unsigned int freq=0;
unsigned int count=0;
unsigned int num=0;
void port_init()
{
	DDRB=0X00;
  92:	17 ba       	out	0x17, r1	; 23
	DDRA=0XFF;
  94:	8f ef       	ldi	r24, 0xFF	; 255
  96:	8a bb       	out	0x1a, r24	; 26
}
  98:	08 95       	ret

0000009a <timer_init>:
void timer_init()
{
	TCCR0|=(1<<CS00)|(1<<CS01);//64 fen pin       //timer0 used as timer
  9a:	83 b7       	in	r24, 0x33	; 51
  9c:	83 60       	ori	r24, 0x03	; 3
  9e:	83 bf       	out	0x33, r24	; 51
	TCNT0=0XB1; 
  a0:	81 eb       	ldi	r24, 0xB1	; 177
  a2:	82 bf       	out	0x32, r24	; 50
	TIMSK|=(1<<TOIE0);
  a4:	89 b7       	in	r24, 0x39	; 57
  a6:	81 60       	ori	r24, 0x01	; 1
  a8:	89 bf       	out	0x39, r24	; 57

	TCCR1B|=(1<<CS12)|(1<<CS11)|(1<<CS10);//source from external T1 pin
  aa:	8e b5       	in	r24, 0x2e	; 46
  ac:	87 60       	ori	r24, 0x07	; 7
  ae:	8e bd       	out	0x2e, r24	; 46
	TCNT1H=0X00;
  b0:	1d bc       	out	0x2d, r1	; 45
	TCNT1L=0X00;
  b2:	1c bc       	out	0x2c, r1	; 44
	TIMSK|=(1<<TOIE1);
  b4:	89 b7       	in	r24, 0x39	; 57
  b6:	84 60       	ori	r24, 0x04	; 4
  b8:	89 bf       	out	0x39, r24	; 57

}
  ba:	08 95       	ret

000000bc <device_init>:
void device_init()
{
	cli();
  bc:	f8 94       	cli
unsigned int freq=0;
unsigned int count=0;
unsigned int num=0;
void port_init()
{
	DDRB=0X00;
  be:	17 ba       	out	0x17, r1	; 23
	DDRA=0XFF;
  c0:	8f ef       	ldi	r24, 0xFF	; 255
  c2:	8a bb       	out	0x1a, r24	; 26
}
void timer_init()
{
	TCCR0|=(1<<CS00)|(1<<CS01);//64 fen pin       //timer0 used as timer
  c4:	83 b7       	in	r24, 0x33	; 51
  c6:	83 60       	ori	r24, 0x03	; 3
  c8:	83 bf       	out	0x33, r24	; 51
	TCNT0=0XB1; 
  ca:	81 eb       	ldi	r24, 0xB1	; 177
  cc:	82 bf       	out	0x32, r24	; 50
	TIMSK|=(1<<TOIE0);
  ce:	89 b7       	in	r24, 0x39	; 57
  d0:	81 60       	ori	r24, 0x01	; 1
  d2:	89 bf       	out	0x39, r24	; 57

	TCCR1B|=(1<<CS12)|(1<<CS11)|(1<<CS10);//source from external T1 pin
  d4:	8e b5       	in	r24, 0x2e	; 46
  d6:	87 60       	ori	r24, 0x07	; 7
  d8:	8e bd       	out	0x2e, r24	; 46
	TCNT1H=0X00;
  da:	1d bc       	out	0x2d, r1	; 45
	TCNT1L=0X00;
  dc:	1c bc       	out	0x2c, r1	; 44
	TIMSK|=(1<<TOIE1);
  de:	89 b7       	in	r24, 0x39	; 57
  e0:	84 60       	ori	r24, 0x04	; 4
  e2:	89 bf       	out	0x39, r24	; 57
void device_init()
{
	cli();
	port_init();
	timer_init();
	sei();
  e4:	78 94       	sei
}
  e6:	08 95       	ret

000000e8 <NUMTOSEG7>:

unsigned char NUMTOSEG7(unsigned char DATA)
{ unsigned char AA;
  switch (DATA)
  e8:	88 30       	cpi	r24, 0x08	; 8
  ea:	d1 f1       	breq	.+116    	; 0x160 <NUMTOSEG7+0x78>
  ec:	89 30       	cpi	r24, 0x09	; 9
  ee:	90 f4       	brcc	.+36     	; 0x114 <NUMTOSEG7+0x2c>
  f0:	83 30       	cpi	r24, 0x03	; 3
  f2:	61 f1       	breq	.+88     	; 0x14c <NUMTOSEG7+0x64>
  f4:	84 30       	cpi	r24, 0x04	; 4
  f6:	28 f4       	brcc	.+10     	; 0x102 <NUMTOSEG7+0x1a>
  f8:	81 30       	cpi	r24, 0x01	; 1
  fa:	11 f1       	breq	.+68     	; 0x140 <NUMTOSEG7+0x58>
  fc:	82 30       	cpi	r24, 0x02	; 2
  fe:	20 f5       	brcc	.+72     	; 0x148 <NUMTOSEG7+0x60>
 100:	21 c0       	rjmp	.+66     	; 0x144 <NUMTOSEG7+0x5c>
 102:	85 30       	cpi	r24, 0x05	; 5
 104:	39 f1       	breq	.+78     	; 0x154 <NUMTOSEG7+0x6c>
 106:	85 30       	cpi	r24, 0x05	; 5
 108:	18 f1       	brcs	.+70     	; 0x150 <NUMTOSEG7+0x68>
 10a:	86 30       	cpi	r24, 0x06	; 6
 10c:	29 f1       	breq	.+74     	; 0x158 <NUMTOSEG7+0x70>
 10e:	87 30       	cpi	r24, 0x07	; 7
 110:	d9 f5       	brne	.+118    	; 0x188 <NUMTOSEG7+0xa0>
 112:	24 c0       	rjmp	.+72     	; 0x15c <NUMTOSEG7+0x74>
 114:	8d 30       	cpi	r24, 0x0D	; 13
 116:	71 f1       	breq	.+92     	; 0x174 <NUMTOSEG7+0x8c>
 118:	8e 30       	cpi	r24, 0x0E	; 14
 11a:	48 f4       	brcc	.+18     	; 0x12e <NUMTOSEG7+0x46>
 11c:	8a 30       	cpi	r24, 0x0A	; 10
 11e:	21 f1       	breq	.+72     	; 0x168 <NUMTOSEG7+0x80>
 120:	8a 30       	cpi	r24, 0x0A	; 10
 122:	00 f1       	brcs	.+64     	; 0x164 <NUMTOSEG7+0x7c>
 124:	8b 30       	cpi	r24, 0x0B	; 11
 126:	11 f1       	breq	.+68     	; 0x16c <NUMTOSEG7+0x84>
 128:	8c 30       	cpi	r24, 0x0C	; 12
 12a:	71 f5       	brne	.+92     	; 0x188 <NUMTOSEG7+0xa0>
 12c:	21 c0       	rjmp	.+66     	; 0x170 <NUMTOSEG7+0x88>
 12e:	8f 30       	cpi	r24, 0x0F	; 15
 130:	29 f1       	breq	.+74     	; 0x17c <NUMTOSEG7+0x94>
 132:	8f 30       	cpi	r24, 0x0F	; 15
 134:	08 f1       	brcs	.+66     	; 0x178 <NUMTOSEG7+0x90>
 136:	8d 32       	cpi	r24, 0x2D	; 45
 138:	19 f1       	breq	.+70     	; 0x180 <NUMTOSEG7+0x98>
 13a:	8f 35       	cpi	r24, 0x5F	; 95
 13c:	29 f5       	brne	.+74     	; 0x188 <NUMTOSEG7+0xa0>
 13e:	22 c0       	rjmp	.+68     	; 0x184 <NUMTOSEG7+0x9c>
 140:	89 ef       	ldi	r24, 0xF9	; 249
 142:	08 95       	ret
 144:	80 ec       	ldi	r24, 0xC0	; 192
 146:	08 95       	ret
 148:	84 ea       	ldi	r24, 0xA4	; 164
 14a:	08 95       	ret
  { case 0: AA=0xc0;break;  // ¡®0¡¯
    case 1: AA=0xf9;break;  // ¡®1¡¯
    case 2: AA=0xa4;break;  // ¡®2¡¯
 14c:	80 eb       	ldi	r24, 0xB0	; 176
 14e:	08 95       	ret
    case 3: AA=0xb0;break;  // ¡®3¡¯
 150:	89 e9       	ldi	r24, 0x99	; 153
 152:	08 95       	ret
    case 4: AA=0x99;break;  // ¡®4¡¯
 154:	82 e9       	ldi	r24, 0x92	; 146
 156:	08 95       	ret
    case 5: AA=0x92;break;  // ¡®5¡¯
 158:	82 e8       	ldi	r24, 0x82	; 130
 15a:	08 95       	ret
    case 6: AA=0x82;break;  // ¡®6¡¯
 15c:	88 ef       	ldi	r24, 0xF8	; 248
 15e:	08 95       	ret
    case 7: AA=0xf8;break;  // ¡®7¡¯
 160:	80 e8       	ldi	r24, 0x80	; 128
 162:	08 95       	ret
    case 8: AA=0x80;break;  // ¡®8¡¯
 164:	80 e9       	ldi	r24, 0x90	; 144
 166:	08 95       	ret
    case 9: AA=0x90;break;  // ¡®9¡¯
 168:	88 e8       	ldi	r24, 0x88	; 136
 16a:	08 95       	ret
    case 10: AA=0x88;break; // ¡®A¡¯
 16c:	83 e8       	ldi	r24, 0x83	; 131
 16e:	08 95       	ret
    case 11: AA=0x83;break; // ¡®B¡¯
 170:	86 ec       	ldi	r24, 0xC6	; 198
 172:	08 95       	ret
    case 12: AA=0xc6;break; // ¡®C¡¯
 174:	81 ea       	ldi	r24, 0xA1	; 161
 176:	08 95       	ret
    case 13: AA=0xa1;break; // ¡®D¡¯
 178:	86 e8       	ldi	r24, 0x86	; 134
 17a:	08 95       	ret
    case 14: AA=0x86;break; // ¡®E¡¯
 17c:	8e e8       	ldi	r24, 0x8E	; 142
 17e:	08 95       	ret
    case 15: AA=0x8e;break; // ¡®F¡¯
 180:	8f ed       	ldi	r24, 0xDF	; 223
 182:	08 95       	ret
    case '-':AA=0xdf;break; // ÆÆÕÛºÅ
 184:	87 ef       	ldi	r24, 0xF7	; 247
 186:	08 95       	ret
    case '_':AA=0xf7;break; // ÏÂ»®Ïß
 188:	8f ef       	ldi	r24, 0xFF	; 255
    case ' ':AA=0xff;break; // ÏûÒþ
	default: AA=0xff;
  }
  return(AA);
}
 18a:	08 95       	ret

0000018c <serial_to_parral>:


void serial_to_parral(unsigned char disp1,unsigned char disp2)    //±¾º¯ÊýÓÃÓÚ½«Á½¸ö8Î»µÄÐÅºÅÍ¨¹ý´®¿Ú×ª²¢¿ÚÊä³ö
{                                                                 //ÆäÖÐ£¬µÚÒ»¸ö²ÎÊý×îÖÕ´«Êä¸øÁËU3,¶øµÚ¶þ¸ö²ÎÊý´«Êä¸øÁËU2
	PORTA|=0X80;
 18c:	df 9a       	sbi	0x1b, 7	; 27
 18e:	20 e0       	ldi	r18, 0x00	; 0
 190:	30 e0       	ldi	r19, 0x00	; 0
	for(int q=0;q<8;q++)
	{
		if((disp1&0x80)==0) PORTA&=~0X20;
 192:	87 fd       	sbrc	r24, 7
 194:	02 c0       	rjmp	.+4      	; 0x19a <serial_to_parral+0xe>
 196:	dd 98       	cbi	0x1b, 5	; 27
 198:	01 c0       	rjmp	.+2      	; 0x19c <serial_to_parral+0x10>
		else PORTA|=0X20;
 19a:	dd 9a       	sbi	0x1b, 5	; 27
		PORTA&=~0X40;
 19c:	de 98       	cbi	0x1b, 6	; 27
		PORTA|=0X40;
 19e:	de 9a       	sbi	0x1b, 6	; 27


void serial_to_parral(unsigned char disp1,unsigned char disp2)    //±¾º¯ÊýÓÃÓÚ½«Á½¸ö8Î»µÄÐÅºÅÍ¨¹ý´®¿Ú×ª²¢¿ÚÊä³ö
{                                                                 //ÆäÖÐ£¬µÚÒ»¸ö²ÎÊý×îÖÕ´«Êä¸øÁËU3,¶øµÚ¶þ¸ö²ÎÊý´«Êä¸øÁËU2
	PORTA|=0X80;
	for(int q=0;q<8;q++)
 1a0:	2f 5f       	subi	r18, 0xFF	; 255
 1a2:	3f 4f       	sbci	r19, 0xFF	; 255
 1a4:	28 30       	cpi	r18, 0x08	; 8
 1a6:	31 05       	cpc	r19, r1
 1a8:	11 f0       	breq	.+4      	; 0x1ae <serial_to_parral+0x22>
	{
		if((disp1&0x80)==0) PORTA&=~0X20;
		else PORTA|=0X20;
		PORTA&=~0X40;
		PORTA|=0X40;
		disp1<<=1;
 1aa:	88 0f       	add	r24, r24
 1ac:	f2 cf       	rjmp	.-28     	; 0x192 <serial_to_parral+0x6>
 1ae:	80 e0       	ldi	r24, 0x00	; 0
 1b0:	90 e0       	ldi	r25, 0x00	; 0
	}
	for(int w=0;w<8;w++)
	{
		if((disp2&0x80)==0) PORTA&=~0X20;
 1b2:	67 fd       	sbrc	r22, 7
 1b4:	02 c0       	rjmp	.+4      	; 0x1ba <serial_to_parral+0x2e>
 1b6:	dd 98       	cbi	0x1b, 5	; 27
 1b8:	01 c0       	rjmp	.+2      	; 0x1bc <serial_to_parral+0x30>
		else PORTA|=0X20;
 1ba:	dd 9a       	sbi	0x1b, 5	; 27
		PORTA&=~0X40;
 1bc:	de 98       	cbi	0x1b, 6	; 27
		PORTA|=0X40;
 1be:	de 9a       	sbi	0x1b, 6	; 27
		else PORTA|=0X20;
		PORTA&=~0X40;
		PORTA|=0X40;
		disp1<<=1;
	}
	for(int w=0;w<8;w++)
 1c0:	01 96       	adiw	r24, 0x01	; 1
 1c2:	88 30       	cpi	r24, 0x08	; 8
 1c4:	91 05       	cpc	r25, r1
 1c6:	11 f0       	breq	.+4      	; 0x1cc <serial_to_parral+0x40>
	{
		if((disp2&0x80)==0) PORTA&=~0X20;
		else PORTA|=0X20;
		PORTA&=~0X40;
		PORTA|=0X40;
		disp2<<=1;
 1c8:	66 0f       	add	r22, r22
 1ca:	f3 cf       	rjmp	.-26     	; 0x1b2 <serial_to_parral+0x26>
	}
	PORTA&=~0X80;
 1cc:	df 98       	cbi	0x1b, 7	; 27
	PORTA|=0X80;
 1ce:	df 9a       	sbi	0x1b, 7	; 27
}
 1d0:	08 95       	ret

000001d2 <__vector_9>:

ISR(TIMER0_OVF_vect)					  //timer0 used as timer 10ms
{
 1d2:	1f 92       	push	r1
 1d4:	0f 92       	push	r0
 1d6:	0f b6       	in	r0, 0x3f	; 63
 1d8:	0f 92       	push	r0
 1da:	11 24       	eor	r1, r1
 1dc:	2f 93       	push	r18
 1de:	8f 93       	push	r24
 1e0:	9f 93       	push	r25
	TCNT0=0X81;
 1e2:	81 e8       	ldi	r24, 0x81	; 129
 1e4:	82 bf       	out	0x32, r24	; 50
	if(++num>=300)
 1e6:	80 91 67 00 	lds	r24, 0x0067
 1ea:	90 91 68 00 	lds	r25, 0x0068
 1ee:	01 96       	adiw	r24, 0x01	; 1
 1f0:	90 93 68 00 	sts	0x0068, r25
 1f4:	80 93 67 00 	sts	0x0067, r24
 1f8:	8c 52       	subi	r24, 0x2C	; 44
 1fa:	91 40       	sbci	r25, 0x01	; 1
 1fc:	50 f0       	brcs	.+20     	; 0x212 <__vector_9+0x40>
	{
		num=0;
 1fe:	10 92 68 00 	sts	0x0068, r1
 202:	10 92 67 00 	sts	0x0067, r1
		freq=TCNT1;
 206:	8c b5       	in	r24, 0x2c	; 44
 208:	9d b5       	in	r25, 0x2d	; 45
 20a:	90 93 64 00 	sts	0x0064, r25
 20e:	80 93 63 00 	sts	0x0063, r24
	}
	TCNT1H=0X00; TCNT1L=0X00;	
 212:	1d bc       	out	0x2d, r1	; 45
 214:	1c bc       	out	0x2c, r1	; 44
}
 216:	9f 91       	pop	r25
 218:	8f 91       	pop	r24
 21a:	2f 91       	pop	r18
 21c:	0f 90       	pop	r0
 21e:	0f be       	out	0x3f, r0	; 63
 220:	0f 90       	pop	r0
 222:	1f 90       	pop	r1
 224:	18 95       	reti

00000226 <__vector_8>:

ISR(TIMER1_OVF_vect)					  //timer1 used as timer
{
 226:	1f 92       	push	r1
 228:	0f 92       	push	r0
 22a:	0f b6       	in	r0, 0x3f	; 63
 22c:	0f 92       	push	r0
 22e:	11 24       	eor	r1, r1
	TCNT1H=0X00;
 230:	1d bc       	out	0x2d, r1	; 45
	TCNT1L=0X00;
 232:	1c bc       	out	0x2c, r1	; 44
}
 234:	0f 90       	pop	r0
 236:	0f be       	out	0x3f, r0	; 63
 238:	0f 90       	pop	r0
 23a:	1f 90       	pop	r1
 23c:	18 95       	reti

0000023e <main>:
		default: scan_count=1; break;
	}
}*/

int main()
{
 23e:	1f 93       	push	r17
	device_init();	
 240:	0e 94 5e 00 	call	0xbc	; 0xbc <device_init>
	{
		scan_digi[0]=freq/1000;
		scan_digi[1]=freq/100%10;
		scan_digi[2]=freq/10%10;
		scan_digi[3]=freq%10;
		if(++scan_count>4) scan_count=1;
 244:	11 e0       	ldi	r17, 0x01	; 1
int main()
{
	device_init();	
	while(1)
	{
		scan_digi[0]=freq/1000;
 246:	20 91 63 00 	lds	r18, 0x0063
 24a:	30 91 64 00 	lds	r19, 0x0064
 24e:	c9 01       	movw	r24, r18
 250:	68 ee       	ldi	r22, 0xE8	; 232
 252:	73 e0       	ldi	r23, 0x03	; 3
 254:	0e 94 85 01 	call	0x30a	; 0x30a <__udivmodhi4>
 258:	f6 2f       	mov	r31, r22
 25a:	60 93 69 00 	sts	0x0069, r22
		scan_digi[1]=freq/100%10;
 25e:	c9 01       	movw	r24, r18
 260:	64 e6       	ldi	r22, 0x64	; 100
 262:	70 e0       	ldi	r23, 0x00	; 0
 264:	0e 94 85 01 	call	0x30a	; 0x30a <__udivmodhi4>
 268:	cb 01       	movw	r24, r22
 26a:	6a e0       	ldi	r22, 0x0A	; 10
 26c:	70 e0       	ldi	r23, 0x00	; 0
 26e:	0e 94 85 01 	call	0x30a	; 0x30a <__udivmodhi4>
 272:	e8 2f       	mov	r30, r24
 274:	80 93 6a 00 	sts	0x006A, r24
		scan_digi[2]=freq/10%10;
 278:	c9 01       	movw	r24, r18
 27a:	6a e0       	ldi	r22, 0x0A	; 10
 27c:	70 e0       	ldi	r23, 0x00	; 0
 27e:	0e 94 85 01 	call	0x30a	; 0x30a <__udivmodhi4>
 282:	cb 01       	movw	r24, r22
 284:	6a e0       	ldi	r22, 0x0A	; 10
 286:	70 e0       	ldi	r23, 0x00	; 0
 288:	0e 94 85 01 	call	0x30a	; 0x30a <__udivmodhi4>
 28c:	48 2f       	mov	r20, r24
 28e:	80 93 6b 00 	sts	0x006B, r24
		scan_digi[3]=freq%10;
 292:	c9 01       	movw	r24, r18
 294:	6a e0       	ldi	r22, 0x0A	; 10
 296:	70 e0       	ldi	r23, 0x00	; 0
 298:	0e 94 85 01 	call	0x30a	; 0x30a <__udivmodhi4>
 29c:	98 2f       	mov	r25, r24
 29e:	80 93 6c 00 	sts	0x006C, r24
		if(++scan_count>4) scan_count=1;
 2a2:	80 91 62 00 	lds	r24, 0x0062
 2a6:	8f 5f       	subi	r24, 0xFF	; 255
 2a8:	80 93 62 00 	sts	0x0062, r24
 2ac:	85 30       	cpi	r24, 0x05	; 5
 2ae:	10 f0       	brcs	.+4      	; 0x2b4 <main+0x76>
 2b0:	10 93 62 00 	sts	0x0062, r17
		switch(scan_count)
 2b4:	80 91 62 00 	lds	r24, 0x0062
 2b8:	82 30       	cpi	r24, 0x02	; 2
 2ba:	81 f0       	breq	.+32     	; 0x2dc <main+0x9e>
 2bc:	83 30       	cpi	r24, 0x03	; 3
 2be:	18 f4       	brcc	.+6      	; 0x2c6 <main+0x88>
 2c0:	81 30       	cpi	r24, 0x01	; 1
 2c2:	01 f5       	brne	.+64     	; 0x304 <main+0xc6>
 2c4:	05 c0       	rjmp	.+10     	; 0x2d0 <main+0x92>
 2c6:	83 30       	cpi	r24, 0x03	; 3
 2c8:	79 f0       	breq	.+30     	; 0x2e8 <main+0xaa>
 2ca:	84 30       	cpi	r24, 0x04	; 4
 2cc:	d9 f4       	brne	.+54     	; 0x304 <main+0xc6>
 2ce:	12 c0       	rjmp	.+36     	; 0x2f4 <main+0xb6>
		{
			case 1: serial_to_parral(0x81,NUMTOSEG7(scan_digi[0])); break;//ÏÔÊ¾¸ßµÚÒ»Î»
 2d0:	8f 2f       	mov	r24, r31
 2d2:	0e 94 74 00 	call	0xe8	; 0xe8 <NUMTOSEG7>
 2d6:	68 2f       	mov	r22, r24
 2d8:	81 e8       	ldi	r24, 0x81	; 129
 2da:	11 c0       	rjmp	.+34     	; 0x2fe <main+0xc0>
			case 2: serial_to_parral(0x82,NUMTOSEG7(scan_digi[1])); break;//ÏÔÊ¾¸ßµÚ¶þÎ»
 2dc:	8e 2f       	mov	r24, r30
 2de:	0e 94 74 00 	call	0xe8	; 0xe8 <NUMTOSEG7>
 2e2:	68 2f       	mov	r22, r24
 2e4:	82 e8       	ldi	r24, 0x82	; 130
 2e6:	0b c0       	rjmp	.+22     	; 0x2fe <main+0xc0>
			case 3: serial_to_parral(0x84,NUMTOSEG7(scan_digi[2])); break;//ÏÔÊ¾¸ßµÚÈýÎ»
 2e8:	84 2f       	mov	r24, r20
 2ea:	0e 94 74 00 	call	0xe8	; 0xe8 <NUMTOSEG7>
 2ee:	68 2f       	mov	r22, r24
 2f0:	84 e8       	ldi	r24, 0x84	; 132
 2f2:	05 c0       	rjmp	.+10     	; 0x2fe <main+0xc0>
			case 4: serial_to_parral(0x88,NUMTOSEG7(scan_digi[3])); break;//ÏÔÊ¾¸ßµÚËÄÎ»
 2f4:	89 2f       	mov	r24, r25
 2f6:	0e 94 74 00 	call	0xe8	; 0xe8 <NUMTOSEG7>
 2fa:	68 2f       	mov	r22, r24
 2fc:	88 e8       	ldi	r24, 0x88	; 136
 2fe:	0e 94 c6 00 	call	0x18c	; 0x18c <serial_to_parral>
 302:	a1 cf       	rjmp	.-190    	; 0x246 <main+0x8>
			default: scan_count=1; break;
 304:	10 93 62 00 	sts	0x0062, r17
 308:	9e cf       	rjmp	.-196    	; 0x246 <main+0x8>

0000030a <__udivmodhi4>:
 30a:	aa 1b       	sub	r26, r26
 30c:	bb 1b       	sub	r27, r27
 30e:	51 e1       	ldi	r21, 0x11	; 17
 310:	07 c0       	rjmp	.+14     	; 0x320 <__udivmodhi4_ep>

00000312 <__udivmodhi4_loop>:
 312:	aa 1f       	adc	r26, r26
 314:	bb 1f       	adc	r27, r27
 316:	a6 17       	cp	r26, r22
 318:	b7 07       	cpc	r27, r23
 31a:	10 f0       	brcs	.+4      	; 0x320 <__udivmodhi4_ep>
 31c:	a6 1b       	sub	r26, r22
 31e:	b7 0b       	sbc	r27, r23

00000320 <__udivmodhi4_ep>:
 320:	88 1f       	adc	r24, r24
 322:	99 1f       	adc	r25, r25
 324:	5a 95       	dec	r21
 326:	a9 f7       	brne	.-22     	; 0x312 <__udivmodhi4_loop>
 328:	80 95       	com	r24
 32a:	90 95       	com	r25
 32c:	bc 01       	movw	r22, r24
 32e:	cd 01       	movw	r24, r26
 330:	08 95       	ret

00000332 <_exit>:
 332:	f8 94       	cli

00000334 <__stop_program>:
 334:	ff cf       	rjmp	.-2      	; 0x334 <__stop_program>
